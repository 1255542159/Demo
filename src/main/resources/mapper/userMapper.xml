<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.business.user.mapper.UserMapper">

    <resultMap id="baseMap" type="com.example.demo.business.user.entity.User">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
        <result column="SNO" property="sno"/>
        <result column="PASSWORD" property="password"/>
        <result column="SEX" property="sex"/>
        <result column="AVATAR" property="avatar"/>
        <result column="PHONE" property="phone"/>
        <result column="EMAIL" property="email"/>
        <result column="SIGN" property="sign"/>
        <result column="STATUS" property="status"/>
        <result column="REG_ID" property="regIp"/>
        <result column="LOGIN_IP" property="loginIp"/>
        <result column="CLUB_ID" property="clubId"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="UPDATE_TIME" property="updateTime"/>
        <!--关联查询-->
        <collection property="roles" column="ID" ofType="com.example.demo.business.user.entity.Role"
                    select="com.example.demo.business.user.mapper.RoleMapper.findRolesByUserId"/>
    </resultMap>


    <resultMap id="baseMenu" type="com.example.demo.business.user.entity.Menu">
        <id column="ID" property="id"/>
        <result column="URL" property="url"/>
        <result column="PATH" property="path"/>
        <result column="COMPONENT" property="component"/>
        <result column="NAME" property="name"/>
        <result column="ICON" property="icon"/>
        <result column="KEEPALIVE" property="keepAlive"/>
        <result column="REQUIRE_AUTH" property="requireAuth"/>
        <result column="PARENT_ID" property="parentId"/>
        <result column="MENU_LEVEL" property="menuLevel"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <resultMap id="userMap" type="com.example.demo.business.user.entity.UserVo">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
        <result column="SNO" property="sno"/>
        <result column="PASSWORD" property="password"/>
        <result column="SEX" property="sex"/>
        <result column="AVATAR" property="avatar"/>
        <result column="PHONE" property="phone"/>
        <result column="EMAIL" property="email"/>
        <result column="SIGN" property="sign"/>
        <result column="STATUS" property="status"/>
        <result column="REG_ID" property="regIp"/>
        <result column="LOGIN_IP" property="loginIp"/>
        <result column="CLUB_ID" property="clubId"/>
        <result column="CREATE_TIME" property="createTime"/>
        <result column="UPDATE_TIME" property="updateTime"/>
        <!--关联查询-->
        <collection property="club" column="CLUB_ID" ofType="com.example.demo.business.admin.entity.Club"
                    select="com.example.demo.business.admin.mapper.ClubMapper.findClubById"/>
    </resultMap>
    <insert id="save">
        insert into `user`(
        ID,`NAME`,SNO,PASSWORD,SEX,
        AVATAR,PHONE,EMAIL,SIGN,STATUS,
        REG_ID,LOGIN_IP,CLUB_ID,CREATE_TIME,UPDATE_TIME
        )values (
        #{id},#{name},#{sno},#{password},#{sex},
        #{avatar},#{phone},#{email},#{sign},#{status},
        #{regIp},#{loginIp},#{clubId},#{createTime},#{updateTime}
        )
    </insert>
    <update id="update" parameterType="com.example.demo.business.user.entity.User">
        update `user`
        set
        <if test="name != null">
            `NAME` = #{name},
        </if>
        <if test="sno != null">
            SNO = #{sno},
        </if>
        <if test="password != null">
            PASSWORD = #{password},
        </if>
        <if test="sex != null">
            SEX = #{sex},
        </if>
        <if test="phone != null">
            PHONE = #{phone},
        </if>
        <if test="email != null">
            EMAIL = #{email},
        </if>
        <if test="status != null">
            STATUS = #{status},
        </if>
        <if test="clubId != null">
            CLUB_ID = #{clubId},
        </if>
        <if test="avatar != null">
            AVATAR = #{avatar},
        </if>
        UPDATE_TIME = #{updateTime}
        where ID = #{id};
    </update>
    <delete id="remove">
        delete from `user` where ID =#{id}
    </delete>

    <select id="findUserByPhone" resultMap="baseMap">
        select * from `user` where phone = #{phone} and status = 0;
    </select>
    <select id="getMenuList" resultMap="baseMenu">
            select m.ID,
            m.URL,
            m.PATH,
            m.COMPONENT,
            m.NAME,
            m.ICON,
            m.KEEPALIVE,
            m.REQUIRE_AUTH,
            m.PARENT_ID,
            m.MENU_LEVEL
            from role_menu rm
            right join menu m on rm.MENU_ID = m.ID
            where rm.ROLE_ID = #{id}
    </select>
    <select id="findAll" resultType="com.example.demo.business.user.entity.User">

    </select>
    <select id="getListByClubId" resultMap="userMap">
        select
        ID,`NAME`,SNO,SEX,
        AVATAR,PHONE,EMAIL,SIGN,STATUS,
        REG_ID,LOGIN_IP,CLUB_ID,CREATE_TIME,UPDATE_TIME,CLUB_ID
        from `user`
        where 1=1
        <if test="clubId != null">
            and CLUB_ID = #{clubId}
        </if>
        <if test="userId != null">
            and id != #{userId}
        </if>
    </select>
    <select id="getImageList" resultType="com.example.demo.business.user.entity.Image">
        select *from image where
        1 = 1
        <if test="userId != null">
           and USER_ID = #{userId}
        </if>

        <if test="original != null">
            and ORIGINAL =#{original}
        </if>
         and STATUS = 0
    </select>


</mapper>
